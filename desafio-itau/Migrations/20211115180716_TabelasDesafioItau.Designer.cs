// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using desafio_itau.Repository;

namespace desafio_itau.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211115180716_TabelasDesafioItau")]
    partial class TabelasDesafioItau
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("desafio_itau.Entities.Moeda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebHook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebHookParameter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Moeda");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc410d91-ab65-4fe1-a9cf-eeb002d8dde4"),
                            AtualizadoEm = new DateTime(2021, 11, 15, 15, 7, 15, 748, DateTimeKind.Local).AddTicks(730),
                            CriadoEm = new DateTime(2021, 11, 15, 15, 7, 15, 748, DateTimeKind.Local).AddTicks(74),
                            Descricao = "Dólar Americano",
                            WebHook = "https://economia.awesomeapi.com.br/last/USD-BRL",
                            WebHookParameter = "USDBRL"
                        },
                        new
                        {
                            Id = new Guid("dd00f3d5-012f-4fa8-a2e6-9664a12a534e"),
                            AtualizadoEm = new DateTime(2021, 11, 15, 15, 7, 15, 748, DateTimeKind.Local).AddTicks(1598),
                            CriadoEm = new DateTime(2021, 11, 15, 15, 7, 15, 748, DateTimeKind.Local).AddTicks(1593),
                            Descricao = "Euro",
                            WebHook = "https://economia.awesomeapi.com.br/last/EUR-BRL",
                            WebHookParameter = "EURBRL"
                        });
                });

            modelBuilder.Entity("desafio_itau.Entities.Segmento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValorTaxa")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Segmento");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66146a1a-6e80-44ba-a8e9-873db86c1fd2"),
                            AtualizadoEm = new DateTime(2021, 11, 15, 15, 7, 15, 745, DateTimeKind.Local).AddTicks(8459),
                            CriadoEm = new DateTime(2021, 11, 15, 15, 7, 15, 744, DateTimeKind.Local).AddTicks(5210),
                            Descricao = "Varejo",
                            ValorTaxa = 3.5
                        },
                        new
                        {
                            Id = new Guid("ef085db4-2425-4ab6-b9c2-447fcfac86ae"),
                            AtualizadoEm = new DateTime(2021, 11, 15, 15, 7, 15, 745, DateTimeKind.Local).AddTicks(9086),
                            CriadoEm = new DateTime(2021, 11, 15, 15, 7, 15, 745, DateTimeKind.Local).AddTicks(9080),
                            Descricao = "Personnalite",
                            ValorTaxa = 1.5
                        },
                        new
                        {
                            Id = new Guid("b5f43905-c60d-4a53-a7c4-fdc28fd832e0"),
                            AtualizadoEm = new DateTime(2021, 11, 15, 15, 7, 15, 745, DateTimeKind.Local).AddTicks(9090),
                            CriadoEm = new DateTime(2021, 11, 15, 15, 7, 15, 745, DateTimeKind.Local).AddTicks(9089),
                            Descricao = "Private",
                            ValorTaxa = 0.5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
